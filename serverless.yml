# NOTE: update this with your service name
service: reto-serverless

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin

resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}
  - ${file(resources/dynamo-table.yml)}

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  lambdaHashingVersion: 20201221
  memorySize: 128

  environment:
    DYNAMODB_TABLE_PEOPLES: Personas
    DYNAMODB_TABLE_STARSHIP: Starship
    SWAPI_ENDPOINT: swapi.py4e.com

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  # listaPersonas:
  #   handler: ./src/persona/handler.getPersonas
  #   events:
  #     - http:
  #         path: personas
  #         method: get
  #         cors: true
  crearPersona:
    handler: ./src/modules/persona/create.handlerSetPeople
    events:
      - http:
          path: /add/persona
          method: post
          cors: true

  detallePersona:
    handler: ./src/modules/persona/detail.handlerGetPerson
    events:
      - http:
          path: persona/{id}
          method: get
          cors: true

  listPersonas:
    handler: ./src/modules/persona/list.handlerListPerson
    events:
      - http:
          path: /list/person
          method: get
          cors: true

  listNaveEstelar:
    handler: ./src/modules/nave_estelar/list.handlerListStarships
    events:
      - http:
          path: /list/starships
          method: get
          cors: true

  crearStarship:
    handler: ./src/modules/nave_estelar/create.handlerSetStarship
    events:
      - http:
          path: /add/starship
          method: post
          cors: true

  detalleStarship:
    handler: ./src/modules/nave_estelar/detail.handlerGetStrship
    events:
      - http:
          path: starship/{id}
          method: get
          cors: true